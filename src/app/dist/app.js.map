{"version":3,"sources":["/src/app/app.module.js","/src/app/class/class.module.js","/src/app/user/user.module.js","/src/app/class/class.controller.js","/src/app/class/class.routes.js","/src/app/class/first-time-controller.js","/src/app/class/studant.controller.js","/src/app/core/app.routes.js","/src/app/core/materialTheme.config.js","/src/app/core/passwordCheck.directive.js","/src/app/pages/home.controller.js","/src/app/user/login.factory.js","/src/app/user/sign.controller.js","/src/app/user/user.factory.js","/src/app/user/username.directive.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChhrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function(){\r\n    'use strick';\r\n    \r\n    angular.module('app', [\r\n        'ngMaterial',\r\n        'ngMessages',\r\n        'ngAnimate',\r\n        'ui.router',\r\n        'app.user',\r\n        'app.class'\r\n    ])\r\n    .value('variables', {\r\n        \"urlBase\": 'http://localhost:3000',\r\n        \"urlApi\": 'http://localhost/sweep/API/',\r\n    });;\r\n    \r\n})();","(function(){\r\n    'use strict';\r\n    \r\n    angular\r\n        .module('app.class', [\r\n            'ui.router',\n            'app.user'\n        ])\r\n})();\n","(function(){\r\n    'use strict';\r\n    \r\n    angular\r\n        .module('app.user', [\r\n            'ui.router'\r\n        ])\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.class')\r\n        .controller('ClassController', ClassController);\r\n\r\n    ClassController.$inject = ['loginFactory', '$state'];\r\n    function ClassController(loginFactory, $state) {\r\n        var vm = this;\r\n        vm.exit = exit;\r\n        vm.className = loginFactory.getUser().user_class;\r\n\r\n        function exit() {\r\n            $state.go('home');\r\n        }\r\n    }\r\n})();\n","(function(){\n    'use strict';\n\n    angular\n        .module('app.class')\n        .config(routes)\n\n        routes.$inject = ['$stateProvider'];\n        function routes($stateProvider){\n            $stateProvider\n                .state('class', {\n                    url: '/turma',\n                    templateUrl: 'app/class/class.html',\n                    controller: 'ClassController',\n                    controllerAs: 'vm',\n                    onEnter: ['$state', 'loginFactory',function($state, loginFactory){\n                        if(loginFactory.getUser() == {}) $state.go(\"home\");\n                        if(!loginFactory.getUser().user_id) $state.go(\"home\");\n                        if(!loginFactory.getUser().user_class) $state.go(\"firstTime\");\n                    }]\n                })\n                .state('firstTime', {\n                    url: '/turma/primeiravisita',\n                    templateUrl: 'app/class/first-time.html',\n                    controller: 'FirstTimeController',\n                    controllerAs: 'vm',\n                    onEnter: ['$state', 'loginFactory',function($state, loginFactory){\n                        if(loginFactory.getUser() == {}) $state.go(\"home\");\n                        if(!loginFactory.getUser().user_id) $state.go(\"home\");\n                        if(loginFactory.getUser().user_class) $state.go(\"class\");\n                    }]\n                })\n        }\n\n})();\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.class')\r\n        .controller('FirstTimeController', FirstTimeController);\r\n\r\n    FirstTimeController.$inject = ['userFactory', 'loginFactory', '$state'];\r\n\r\n    function FirstTimeController(userFactory, loginFactory, $state) {\r\n        var vm = this;\r\n        vm.setClass = setClass;\r\n\r\n        function setClass(className) {\r\n            var data = {\r\n                className: className\r\n            }\r\n            userFactory.defineClassName(data);\r\n            loginFactory.getUser().user_class = className;\r\n            $state.go('class');\r\n        }\r\n    }\r\n})();\r\n","(function () {\n    'use strict';\n\n    angular\n        .module('app.class')\n        .controller('StudantController', StudantController);\n\n    StudantController.$inject = ['loginFactory', 'userFactory', '$mdDialog', 'orderByFilter'];\n\n    function StudantController(loginFactory, userFactory, $mdDialog, orderByFilter) {\n        var vm = this;\n        vm.newStudantDialog = newStudantDialog;\n        vm.notSelected = notSelected;\n        vm.removeStudant = removeStudant;\n        vm.someoneStudant = someoneStudant;\n        vm.studants = [];\n        vm.sweep = sweep;\n\n        vm.$onInit = function(){\n            vm.studants = orderStudants(loginFactory.getUser().studants);\n        }\n\n        /* Private */\n        function orderStudants(studants){\n            studants = angular.forEach(studants, function(studant){\n                studant.times = new Number(studant.times);\n            });\n            return orderByFilter(studants, ['times', 'name']);\n        }\n\n        function objectToArray(object){\n            var array = [];\n            angular.forEach(object, function (item) {\n                array.push(item);\n            });\n            return array;\n        }\n\n        /* Publics */\n        function notSelected(swepper, value) {\n            return swepper != value;\n        }\n\n        function newStudantDialog(event) {\n            var confirm = $mdDialog.prompt()\n                .title('Cadastro')\n                .textContent('Preencha o campo abaixo para cadastrar um aluno.')\n                .placeholder('Aluno')\n                .ariaLabel('Aluno')\n                .targetEvent(event)\n                .ok('Adicionar')\n                .cancel('Cancelar');\n\n            $mdDialog.show(confirm).then(function (result) {\n                var data = {\n                    class: loginFactory.getUser().user_id,\n                    name: result\n                };\n                userFactory.createStudant(data).then(function(result){\n                    var studant = result.data;\n                    vm.studants.push({\n                        id: studant.studant_id,\n                        name: studant.studant_name,\n                        times: studant.studant_times,\n                    });\n                    vm.studants = orderStudants(vm.studants);\n                });\n            });\n        };\n\n        function removeStudant(studants){\n            var studantsKeys = [];\n            for(var key in studants){\n                if(studants[key]){\n                    studantsKeys.push(new Number(key));\n                }\n            }\n            var studantsSelects = [];\n            for(var key in studantsKeys){\n                studantsSelects.push(vm.studants[studantsKeys[key]]);\n            }\n            userFactory.removeStudants(studantsSelects).then(function(){\n               vm.studants = vm.studants.filter(function(studant){\n                    return studantsSelects.indexOf(studant) == -1;\n                });\n            });\n        }\n\n        function someoneStudant(studants){\n            studants = objectToArray(studants);\n            return studants && studants.indexOf(true) != -1;\n        }\n\n        function sweep(studants) {\n            userFactory.sweep(studants);\n            studants = objectToArray(studants);\n            vm.studants = vm.studants.map(function (studant) {\n                if (studants.indexOf(studant) != -1) {\n                    studant.times++;\n                    return studant;\n                }\n                return studant;\n            });\n            vm.studants = orderStudants(vm.studants);\n        }\n    }\n})();\n","(function(){\r\n    'use strick';\r\n\r\n    angular\r\n        .module('app')\r\n        .config(routes)\r\n    \r\n    routes.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n    function routes ($locationProvider, $stateProvider, $urlRouterProvider) {\r\n        $stateProvider\r\n            .state({\r\n                name: 'home',\r\n                url: '/',\r\n                controller: \"homeController\",\r\n                controllerAs: \"homeVm\",\r\n                templateUrl: \"app/pages/home.html\" \r\n            });\r\n        $urlRouterProvider.otherwise('/');\r\n    }\r\n    \r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .config(materialTheme)\r\n\r\n    materialTheme.$inject = ['$mdThemingProvider'];\r\n\r\n    function materialTheme($mdThemingProvider) {\r\n        $mdThemingProvider\r\n            .theme('default')\r\n            .primaryPalette('teal')\r\n            .accentPalette('indigo');\r\n    };\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .directive('passwordCheck', passwordCheck);\r\n\r\n    passwordCheck.$inject = [];\r\n\r\n    /* @ngInject */\r\n    function passwordCheck() {\r\n        var directive = {\r\n            require: 'ngModel',\r\n            link: link,\r\n            restrict: 'A',\r\n            scope: {\r\n                passwordCheck: \"=passwordCheck\"\r\n            },\r\n        };\r\n        return directive;\r\n\r\n        function link(scope, element, attrs, controller) {\r\n            controller.$validators.passwordCheck = function (modelValue, viewValue) {\r\n                return scope.passwordCheck === modelValue;\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('homeController', homeController);\r\n\r\n    homeController.$inject = ['$state','loginFactory', 'userFactory'];\r\n    function homeController($state, loginFactory, userFactory){\r\n        var vm = this;            \r\n        \r\n        //Variables\r\n        vm.signin = {};\r\n        vm.isUserAvailability = 1;\r\n        vm.userAction = 'login';  \r\n        \r\n        //Functions\r\n        vm.isAction = isAction;\r\n        vm.setAction = setAction;\r\n        vm.userCreated = userCreated;\r\n        vm.userLogged = userLogged;\r\n        \r\n        //Publics\r\n        function isAction(action){\r\n            return vm.userAction === action;\r\n        }\r\n        \r\n        function setAction(action){\r\n            vm.userAction = action;\r\n        }\r\n        \r\n        function userCreated(user){\r\n            userFactory.login(user).then(function(result){\r\n                userLogged(result.data);\r\n            });\r\n        }\r\n\r\n        function userLogged(){\n            $state.go(\"class\");\r\n        }\r\n        \r\n    }\r\n})();\n","(function(){\r\n    'use strict';\r\n    \r\n    angular\r\n        .module('app.user')\r\n        .factory('loginFactory', loginFactory);\r\n    \r\n    loginFactory.$inject = [];\r\n    function loginFactory(){\r\n        var user = false;\r\n        \r\n        var service = {\r\n            getUser: getUser,\r\n            setUser: setUser,\n            cleanUser: cleanUser\n        }\r\n        return service;\r\n        \r\n        function getUser(){\r\n            return user;\r\n        }\r\n        \r\n        function setUser(newUser){\r\n            user = newUser;\r\n        }\r\n        \r\n        function cleanUser(){\n            setUser(false);\n        }\n\n    }\r\n})();\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.user')\r\n        .controller('SignController', SignController);\r\n\r\n    SignController.$inject = ['$rootScope', '$scope','userFactory', 'loginFactory'];\n    function SignController($rootScope, $scope, userFactory, loginFactory){\n        var vm = this;        \r\n        vm.create = create;\r\n        vm.login = login;\r\n        vm.logout = logout;\n        \r\n        function create(user, form, success, error){\r\n            var userData = angular.copy(user);\r\n            angular.copy({}, user)\r\n            userFactory.create(userData).then(function(result){\r\n                if($scope[form]){ \r\n                    $scope[form].$setUntouched();\r\n                    $scope[form].$setPristine();\r\n                }\r\n                success(userData);\r\n            });\r\n        }\r\n        \r\n        function login(user, form, success, error){\r\n            var userData = angular.copy(user);\r\n            angular.copy({}, user)\r\n            userFactory.login(userData).then(function(result){\r\n                if(result.data){\r\n                    if($scope[form]){ \r\n                        $scope[form].$setUntouched();\r\n                        $scope[form].$setPristine();\r\n                    }\r\n                    loginFactory.setUser(result.data);\n                    success(result.data);\r\n                }\r\n            });\r\n        }\r\n\n        function logout(callback){\n            loginFactory.cleanUser();\n            callback();\n        }\n    }\r\n})();\n","(function () {\r\n    'use strict';\r\n    angular\r\n        .module('app.user')\r\n        .service('userFactory', userFactory);\r\n\r\n    userFactory.$inject = ['$http', 'variables', '$location', 'loginFactory'];\r\n\r\n    function userFactory($http, variables, $location, loginFactory) {\r\n        var fileApi = \"user.php\";\r\n\r\n        var service = {\r\n            checkAvailability: checkAvailability,\r\n            create: create,\r\n            createStudant: createStudant,\r\n            defineClassName: defineClassName,\r\n            login: login,\r\n            removeStudants: removeStudants,\n            sweep: sweep\r\n        }\r\n        return service;\r\n\r\n        function checkAvailability(username) {\r\n            var data = {};\r\n            data.action = \"checkAvailability\";\r\n            data.username = username || \"\";\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        };\r\n\r\n        function create(data) {\r\n            data.action = \"create\";\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        };\r\n\r\n        function createStudant(data){\r\n            data.action = \"createStudant\";\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        }\r\n\r\n        function defineClassName(data) {\r\n            data.action = \"defineClass\";\r\n            data.id = loginFactory.getUser().user_id;\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        }\r\n\r\n        function login(data) {\r\n            data.action = \"login\";\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        };\r\n        \r\n        function removeStudants(studants){\n            var data = {\n                studants: studants,\n                action: \"removeStudant\"\n            };\n            console.log(data);\n            return $http.post(variables.urlApi + fileApi, data);\n        }\n\n        function sweep(studants) {\r\n            var data = {};\r\n            data.action = \"sweep\";\r\n            data.studants = studants;\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        };\r\n\r\n\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.user')\r\n        .directive('username', username);\r\n\r\n    username.$inject = ['userFactory', '$timeout', '$q'];\r\n\r\n    function username(userFactory, $timeout, $q) {\r\n        var directive = {\r\n            require: 'ngModel',\r\n            link: link,\r\n            restrict: 'A',\r\n        };\r\n        return directive;\r\n\r\n        function link(scope, element, attrs, controller) {\r\n            controller.$asyncValidators.username = function (modelValue, viewValue) {\r\n                \r\n                var defer = $q.defer();\r\n                \r\n                userFactory.checkAvailability(modelValue).then(function (result) {\r\n                    if(result.data){\r\n                        defer.resolve();\r\n                    }else{\r\n                        defer.reject();\r\n                    }\r\n                })\r\n                \r\n                return defer.promise;\r\n            };\r\n        }\r\n    }\r\n})();\r\n"]}