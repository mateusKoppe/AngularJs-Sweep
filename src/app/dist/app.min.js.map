{"version":3,"sources":["/src/app/app.module.js","/src/app/class/class.module.js","/src/app/user/user.module.js","/src/app/class/class.controller.js","/src/app/class/class.route.js","/src/app/class/first-time-controller.js","/src/app/core/app.routes.js","/src/app/core/materialTheme.config.js","/src/app/core/passwordCheck.directive.js","/src/app/pages/home.controller.js","/src/app/user/login.factory.js","/src/app/user/sign.controller.js","/src/app/user/user-create.directive.js","/src/app/user/user.factory.js","/src/app/user/username.directive.js"],"names":["angular","module","value","urlBase","urlApi","ClassController","controller","$inject","routes","$stateProvider","state","url","templateUrl","controllerAs","onEnter","$state","loginFactory","getUser","go","user_class","config","FirstTimeController","userFactory","setClass","className","data","console","log","defineClassName","vm","this","$locationProvider","$urlRouterProvider","name","otherwise","materialTheme","$mdThemingProvider","theme","primaryPalette","accentPalette","passwordCheck","link","scope","element","attrs","$validators","modelValue","viewValue","directive","require","restrict","homeController","$scope","$location","isAction","action","userAction","setAction","userCreated","signin","isUserAvailability","user","setUser","newUser","service","factory","SignController","$rootScope","create","form","then","result","copy","$broadcast","$setUntouched","$setPristine","login","redirect","userSingup","$on","$http","variables","checkAvailability","username","post","fileApi","id","user_id","$timeout","$q","$asyncValidators","defer","resolve","reject","promise"],"mappings":"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","file":"app.min.js","sourcesContent":["(function(){\r\n    'use strick';\r\n    \r\n    angular.module('app', [\r\n        'ngMaterial',\r\n        'ngMessages',\r\n        'ngAnimate',\r\n        'ui.router',\r\n        'app.user',\r\n        'app.class'\r\n    ])\r\n    .value('variables', {\r\n        \"urlBase\": 'http://localhost:3000',\r\n        \"urlApi\": 'http://localhost/sweep/API/',\r\n    });;\r\n    \r\n})();","(function(){\r\n    'use strict';\r\n    \r\n    angular\r\n        .module('app.class', [\r\n            'ui.router' \r\n        ])\r\n})();","(function(){\r\n    'use strict';\r\n    \r\n    angular\r\n        .module('app.user', [\r\n            'ui.router'\r\n        ])\r\n})();","(function(){\r\n    'use strict';\r\n    \r\n    angular\r\n        .module('app.class')\r\n        .controller('ClassController', ClassController);\r\n    \r\n        ClassController.$inject = [];\r\n        function ClassController(){\r\n            var vm = this;\r\n            \r\n            \r\n        }\r\n})();","(function(){\r\n    'use strict';\r\n    \r\n    angular\r\n        .module('app.class')\r\n        .config(routes)\r\n    \r\n        routes.$inject = ['$stateProvider'];\r\n        function routes($stateProvider){\r\n            $stateProvider\r\n                .state('class', {\r\n                    url: '/turma',\r\n                    templateUrl: 'app/class/list.template.html',\r\n                    controller: 'ClassController',\r\n                    controllerAs: 'vm',\r\n                    onEnter: ['$state', 'loginFactory',function($state, loginFactory){\r\n                        if(!loginFactory.getUser()) $state.go(\"home\");\r\n                        if(!loginFactory.getUser().user_class) $state.go(\"firstTime\");\r\n                    }]\r\n                })\r\n                .state('firstTime', {\r\n                    url: '/turma/primeiravisita',\r\n                    templateUrl: 'app/class/first-time.template.html',\r\n                    controller: 'FirstTimeController',\r\n                    controllerAs: 'vm'\r\n                })\r\n        }\r\n    \r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.class')\r\n        .controller('FirstTimeController', FirstTimeController);\r\n\r\n    FirstTimeController.$inject = ['userFactory'];\r\n\r\n    function FirstTimeController(userFactory) {\r\n        var vm = this;\r\n        vm.setClass = setClass;\r\n\r\n        function setClass(className) {\r\n            var data = {\r\n                className: className\r\n            }\r\n            console.log(className);\r\n            userFactory.defineClassName(data);\r\n        }\r\n    }\r\n})();\r\n","(function(){\r\n    'use strick';\r\n\r\n    angular\r\n        .module('app')\r\n        .config(routes)\r\n    \r\n    routes.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\r\n    function routes ($locationProvider, $stateProvider, $urlRouterProvider) {\r\n        $stateProvider\r\n            .state({\r\n                name: 'home',\r\n                url: '/',\r\n                controller: \"homeController\",\r\n                controllerAs: \"homeVm\",\r\n                templateUrl: \"app/pages/home.view.html\" \r\n            });\r\n        $urlRouterProvider.otherwise('/');\r\n    }\r\n    \r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .config(materialTheme)\r\n\r\n    materialTheme.$inject = ['$mdThemingProvider'];\r\n\r\n    function materialTheme($mdThemingProvider) {\r\n        $mdThemingProvider\r\n            .theme('default')\r\n            .primaryPalette('teal')\r\n            .accentPalette('indigo');\r\n    };\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .directive('passwordCheck', passwordCheck);\r\n\r\n    passwordCheck.$inject = [];\r\n\r\n    /* @ngInject */\r\n    function passwordCheck() {\r\n        var directive = {\r\n            require: 'ngModel',\r\n            link: link,\r\n            restrict: 'A',\r\n            scope: {\r\n                passwordCheck: \"=passwordCheck\"\r\n            },\r\n        };\r\n        return directive;\r\n\r\n        function link(scope, element, attrs, controller) {\r\n            controller.$validators.passwordCheck = function (modelValue, viewValue) {\r\n                return scope.passwordCheck === modelValue;\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('homeController', homeController);\r\n\r\n    homeController.$inject = ['$scope','$location'];\r\n\r\n    function homeController($scope , $location){\r\n        var vm = this;            \r\n        \r\n        //Variables\r\n        vm.signin = {};\r\n        vm.isUserAvailability = 1;\r\n        vm.userAction = 'login';  \r\n        \r\n        //Functions\r\n        vm.isAction = isAction;\r\n        vm.setAction = setAction;\r\n        vm.userCreated = userCreated;\r\n        \r\n        //Publics\r\n        function isAction(action){\r\n            return vm.userAction === action;\r\n        }\r\n        \r\n        function setAction(action){\r\n            vm.userAction = action;\r\n        }\r\n        \r\n        function userCreated(){\r\n            setAction('login');\r\n        }\r\n        \r\n    }\r\n})();","(function(){\r\n    'use strict';\r\n    \r\n    angular\r\n        .module('app.user')\r\n        .factory('loginFactory', loginFactory);\r\n    \r\n    loginFactory.$inject = [];\r\n    function loginFactory(){\r\n        var user = false;\r\n        \r\n        var service = {\r\n            getUser: getUser,\r\n            setUser: setUser\r\n        }\r\n        return service;\r\n        \r\n        function getUser(){\r\n            return user;\r\n        }\r\n        \r\n        function setUser(newUser){\r\n            user = newUser;\r\n        }\r\n        \r\n    }\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.user')\r\n        .controller('SignController', SignController);\r\n\r\n\r\n    /* @ngInject */\r\n    SignController.$inject = ['$rootScope', '$state', '$scope','userFactory','loginFactory'];\r\n    function SignController($rootScope, $state, $scope, userFactory, loginFactory){\r\n        var vm = this;\r\n        \r\n        vm.create = create;\r\n        vm.login = login;\r\n        \r\n        function create(user, form){\r\n            userFactory.create(user).then(function(result){\r\n                angular.copy({}, user);\r\n                $rootScope.$broadcast('userCreate');\r\n                $scope[form].$setUntouched();\r\n                $scope[form].$setPristine();\r\n            });\r\n        }\r\n        \r\n        function login(user, form, redirect){\r\n            userFactory.login(user).then(function(result){\r\n                if(result.data){\r\n                    angular.copy({}, user);\r\n                    loginFactory.setUser(result.data);\r\n                    if($scope[form]){ \r\n                        $scope[form].$setUntouched();\r\n                        $scope[form].$setPristine();\r\n                    }\r\n                    $state.go(redirect);\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.user')\r\n        .directive('userSingup', userSingup);\r\n\r\n    userSingup.$inject = [];\r\n\r\n    /* @ngInject */\r\n    function userSingup() {\r\n        var directive = {\r\n            link: link,\r\n            restrict: 'A',\r\n            scope: {\r\n                userSingup: '&'\r\n            }\r\n        };\r\n        return directive;\r\n\r\n        function link(scope, element, attrs) {      \r\n            scope.$on('userCreate', function(){\r\n                scope.userSingup();\r\n            });\r\n        }\r\n    }\r\n\r\n})();","(function () {\r\n    'use strict';\r\n    angular\r\n        .module('app.user')\r\n        .service('userFactory', userFactory);\r\n\r\n    userFactory.$inject = ['$http','variables','$location', 'loginFactory'];\r\n\r\n    function userFactory($http, variables, $location, loginFactory){\r\n        var fileApi = \"user.php\";\r\n        \r\n        var service = {\r\n            checkAvailability: checkAvailability,\r\n            create: create,\r\n            defineClassName: defineClassName, \r\n            login: login\r\n        }\r\n        return service;\r\n        \r\n        function checkAvailability(username){\r\n            var data = {};\r\n            data.action = \"checkAvailability\";\r\n            data.username = username || \"\";\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        };\r\n        \r\n        function create(data) {\r\n            data.action = \"create\";\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        };\r\n        \r\n        function defineClassName(data){\r\n            data.action = \"defineClass\";\r\n            data.id = loginFactory.getUser().user_id;\r\n            console.log(data);\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        }\r\n        \r\n        function login(data){\r\n            data.action = \"login\";\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        };\r\n        \r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.user')\r\n        .directive('username', username);\r\n\r\n    username.$inject = ['userFactory', '$timeout', '$q'];\r\n\r\n    function username(userFactory, $timeout, $q) {\r\n        var directive = {\r\n            require: 'ngModel',\r\n            link: link,\r\n            restrict: 'A',\r\n        };\r\n        return directive;\r\n\r\n        function link(scope, element, attrs, controller) {\r\n            controller.$asyncValidators.username = function (modelValue, viewValue) {\r\n                \r\n                var defer = $q.defer();\r\n                \r\n                userFactory.checkAvailability(modelValue).then(function (result) {\r\n                    if(result.data){\r\n                        defer.resolve();\r\n                    }else{\r\n                        defer.reject();\r\n                    }\r\n                })\r\n                \r\n                return defer.promise;\r\n            };\r\n        }\r\n    }\r\n})();\r\n"]}