{"version":3,"sources":["/src/app/app.module.js","/src/app/user/user.module.js","/src/app/core/materialTheme.config.js","/src/app/core/passwordCheck.directive.js","/src/app/home/home.controller.js","/src/app/home/home.routes.js","/src/app/user/sign.controller.js","/src/app/user/user-create.directive.js","/src/app/user/user.controller.js","/src/app/user/user.service.js","/src/app/user/username.directive.js"],"names":["angular","module","value","urlBase","urlApi","materialTheme","$mdThemingProvider","theme","primaryPalette","accentPalette","config","$inject","passwordCheck","link","scope","element","attrs","controller","$validators","modelValue","viewValue","directive","require","restrict","homeController","$scope","$location","activate","isAction","action","vm","userAction","setAction","userCreated","this","signin","isUserAvailability","test","console","log","routes","$stateProvider","state","name","url","controllerAs","templateUrl","SignController","$rootScope","userService","create","data","form","userData","then","result","copy","$broadcast","$setUntouched","$setPristine","userLogin","login","path","userSingup","$on","$http","variables","checkAvailability","username","post","fileApi","authenticated","service","$timeout","$q","$asyncValidators","defer","resolve","reject","promise"],"mappings":"CAAA,WACA,YAEAA,SAAAC,OAAA,OACA,aACA,aACA,YACA,YACA,aAEAC,MAAA,aACAC,QAAA,wBACAC,OAAA,mCCZA,WACA,YAEAJ,SACAC,OAAA,YACA,iBCLA,WACA,YAQA,SAAAI,GAAAC,GACAA,EACAC,MAAA,WACAC,eAAA,QACAC,cAAA,UAVAT,QACAC,OAAA,OACAS,OAAAL,GAEAA,EAAAM,SAAA,yBCPA,WACA,YASA,SAAAC,KAWA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAC,GACAA,EAAAC,YAAAN,cAAA,SAAAO,EAAAC,GACA,MAAAN,GAAAF,gBAAAO,GAZA,GAAAE,IACAC,QAAA,UACAT,KAAAA,EACAU,SAAA,IACAT,OACAF,cAAA,kBAGA,OAAAS,GAhBArB,QACAC,OAAA,OACAoB,UAAA,gBAAAT,GAEAA,EAAAD,cCPA,WACA,YASA,SAAAa,GAAAC,EAAAC,GAsBA,QAAAC,MAMA,QAAAC,GAAAC,GACA,MAAAC,GAAAC,aAAAF,EAGA,QAAAG,GAAAH,GACAC,EAAAC,WAAAF,EAGA,QAAAI,KACAD,EAAA,SApCA,GAAAF,GAAAI,IAGAJ,GAAAK,UACAL,EAAAM,mBAAA,EACAN,EAAAC,WAAA,QAGAD,EAAAF,SAAAA,EACAE,EAAAE,UAAAA,EACAF,EAAAG,YAAAA,EAEAH,EAAAO,KAAA,WACAC,QAAAC,IAAA,OAGAZ,IAxBA3B,QACAC,OAAA,OACAgB,WAAA,iBAAAO,GAEAA,EAAAb,SAAA,SAAA,gBCPA,WACA,YAOA,SAAA6B,GAAAC,GACAA,EACAC,OACAC,KAAA,OACAC,IAAA,GACA3B,WAAA,iBACA4B,aAAA,SACAC,YAAA,4BAZA9C,QACAC,OAAA,OACAS,OAAA8B,GAEAA,EAAA7B,SAAA,qBCPA,WACA,YASA,SAAAoC,GAAAtB,EAAAuB,EAAAC,GAMA,QAAAC,GAAAC,EAAAC,GACA,GAAAC,GAAAF,CACAF,GAAAC,OAAAG,GAAAC,KAAA,SAAAC,GACAvD,QAAAwD,QAAAL,GACAH,EAAAS,WAAA,cACAhC,EAAA2B,GAAAM,gBACAjC,EAAA2B,GAAAO,iBAIA,QAAAC,KACAX,EAAAY,MAAA/B,EAAA+B,OAAAP,KAAA,SAAAC,GACAzB,EAAA+B,SACAN,EAAAJ,OACAb,QAAAC,IAAAgB,EAAAJ,MACAb,QAAAC,IAAA,aACAb,UAAAoC,KAAA,aArBA,GAAAhC,GAAAI,IAEAJ,GAAAoB,OAAAA,EACApB,EAAA8B,UAAAA,EAXA5D,QACAC,OAAA,YACAgB,WAAA,iBAAA8B,GAEAA,EAAApC,SAAA,SAAA,aAAA,kBCPA,WACA,YASA,SAAAoD,KAUA,QAAAlD,GAAAC,EAAAC,EAAAC,GACAF,EAAAkD,IAAA,aAAA,WACAlD,EAAAiD,eAXA,GAAA1C,IACAR,KAAAA,EACAU,SAAA,IACAT,OACAiD,WAAA,KAGA,OAAA1C,GAfArB,QACAC,OAAA,YACAoB,UAAA,aAAA0C,GAEAA,EAAApD,cCPA,WACA,YAOA,SAAAa,MALAxB,QACAC,OAAA,YACAgB,WAAA,iBAAAO,GAEAA,EAAAb,cCPA,WACA,YAOA,SAAAsC,GAAAgB,EAAAC,EAAAxC,GAUA,QAAAyC,GAAAC,GACA,GAAAjB,KAGA,OAFAA,GAAAtB,OAAA,oBACAsB,EAAAiB,SAAAA,GAAA,GACAH,EAAAI,KAAAH,EAAA9D,OAAAkE,EAAAnB,GAGA,QAAAD,GAAAC,GAEA,MADAA,GAAAtB,OAAA,SACAoC,EAAAI,KAAAH,EAAA9D,OAAAkE,EAAAnB,GAGA,QAAAU,GAAAV,GAEA,MADAA,GAAAtB,OAAA,QACAoC,EAAAI,KAAAH,EAAA9D,OAAAkE,EAAAnB,GAGA,QAAAoB,KACA7C,EAAAoC,KAAA,cA3BA5B,KAAAiC,kBAAAA,EACAjC,KAAAgB,OAAAA,EACAhB,KAAA2B,MAAAA,EACA3B,KAAAqC,cAAAA,CAEA,IAAAD,GAAA,WAZAtE,QACAC,OAAA,YACAuE,QAAA,cAAAvB,GAEAA,EAAAtC,SAAA,QAAA,YAAA,gBCNA,WACA,YAQA,SAAAyD,GAAAnB,EAAAwB,EAAAC,GAQA,QAAA7D,GAAAC,EAAAC,EAAAC,EAAAC,GACAA,EAAA0D,iBAAAP,SAAA,SAAAjD,EAAAC,GAEA,GAAAwD,GAAAF,EAAAE,OAUA,OARA3B,GAAAkB,kBAAAhD,GAAAmC,KAAA,SAAAC,GACAA,EAAAJ,KACAyB,EAAAC,UAEAD,EAAAE,WAIAF,EAAAG,SApBA,GAAA1D,IACAC,QAAA,UACAT,KAAAA,EACAU,SAAA,IAEA,OAAAF,GAZArB,QACAC,OAAA,YACAoB,UAAA,WAAA+C,GAEAA,EAAAzD,SAAA,cAAA,WAAA","file":"app.min.js","sourcesContent":["(function(){\r\n    'use strick';\r\n    \r\n    angular.module('app', [\r\n        'ngMaterial',\r\n        'ngMessages',\r\n        'ngAnimate',\r\n        'ui.router',\r\n        'app.user'\r\n    ])\r\n    .value('variables', {\r\n        \"urlBase\": 'http://localhost:3000',\r\n        \"urlApi\": 'http://localhost/sweep/API/',\r\n    });;\r\n    \r\n})();","(function(){\r\n    'use strict';\r\n    \r\n    angular\r\n        .module('app.user', [\r\n            'ui.router'\r\n        ])\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .config(materialTheme)\r\n\r\n    materialTheme.$inject = ['$mdThemingProvider'];\r\n\r\n    function materialTheme($mdThemingProvider) {\r\n        $mdThemingProvider\r\n            .theme('default')\r\n            .primaryPalette('teal')\r\n            .accentPalette('indigo');\r\n    };\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .directive('passwordCheck', passwordCheck);\r\n\r\n    passwordCheck.$inject = [];\r\n\r\n    /* @ngInject */\r\n    function passwordCheck() {\r\n        var directive = {\r\n            require: 'ngModel',\r\n            link: link,\r\n            restrict: 'A',\r\n            scope: {\r\n                passwordCheck: \"=passwordCheck\"\r\n            },\r\n        };\r\n        return directive;\r\n\r\n        function link(scope, element, attrs, controller) {\r\n            controller.$validators.passwordCheck = function (modelValue, viewValue) {\r\n                return scope.passwordCheck === modelValue;\r\n            }\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app')\r\n        .controller('homeController', homeController);\r\n\r\n    homeController.$inject = ['$scope','$location'];\r\n\r\n    /* @ngInject */\r\n    function homeController($scope , $location){\r\n        var vm = this;            \r\n        \r\n        //Variables\r\n        vm.signin = {};\r\n        vm.isUserAvailability = 1;\r\n        vm.userAction = 'login';  \r\n        \r\n        //Functions\r\n        vm.isAction = isAction;\r\n        vm.setAction = setAction;\r\n        vm.userCreated = userCreated;\r\n        \r\n        vm.test = function(){\r\n            console.log(\"ok\");\r\n        }\r\n        \r\n        activate();\r\n\r\n        ////////////////\r\n\r\n        // Init function\r\n        function activate() {\r\n            \r\n        }\r\n        \r\n        //Publics\r\n                \r\n        function isAction(action){\r\n            return vm.userAction === action;\r\n        }\r\n        \r\n        function setAction(action){\r\n            vm.userAction = action;\r\n        }\r\n        \r\n        function userCreated(){\r\n            setAction('login');\r\n            \r\n        }\r\n        \r\n    }\r\n})();","(function(){\r\n    'use strick';\r\n\r\n    angular\r\n        .module('app')\r\n        .config(routes)\r\n    \r\n    routes.$inject = ['$stateProvider'];\r\n    function routes ($stateProvider) {\r\n        $stateProvider\r\n            .state({\r\n                name: 'home',\r\n                url: '',\r\n                controller: \"homeController\",\r\n                controllerAs: \"homeVm\",\r\n                templateUrl: \"app/home/home.view.html\" \r\n            });\r\n    }\r\n    \r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.user')\r\n        .controller('SignController', SignController);\r\n\r\n    SignController.$inject = ['$scope','$rootScope','userService'];\r\n\r\n    /* @ngInject */\r\n    function SignController($scope, $rootScope, userService){\r\n        var vm = this;\r\n        \r\n        vm.create = create;\r\n        vm.userLogin = userLogin;\r\n        \r\n        function create(data, form){\r\n            var userData = data;\r\n            userService.create(userData).then(function(result){\r\n                angular.copy({}, data);\r\n                $rootScope.$broadcast('userCreate');\r\n                $scope[form].$setUntouched();\r\n                $scope[form].$setPristine();\r\n            });\r\n        }\r\n        \r\n        function userLogin(){\r\n            userService.login(vm.login).then(function(result){\r\n                vm.login = {};\r\n                if(result.data){\r\n                    console.log(result.data);\r\n                    console.log(\"testafter\");\r\n                    $location.path('/turma');\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.user')\r\n        .directive('userSingup', userSingup);\r\n\r\n    userSingup.$inject = [];\r\n\r\n    /* @ngInject */\r\n    function userSingup() {\r\n        var directive = {\r\n            link: link,\r\n            restrict: 'A',\r\n            scope: {\r\n                userSingup: '&'\r\n            }\r\n        };\r\n        return directive;\r\n\r\n        function link(scope, element, attrs) {      \r\n            scope.$on('userCreate', function(){\r\n                scope.userSingup();\r\n            });\r\n        }\r\n    }\r\n\r\n})();","(function(){\r\n    'use strict';\r\n    \r\n    angular\r\n        .module('app.user')\r\n        .controller('userController', homeController);\r\n        \r\n        homeController.$inject = [];\r\n        function homeController(){\r\n            \r\n            \r\n        }\r\n})();","(function () {\r\n    'use strict';\r\n    angular\r\n        .module('app.user')\r\n        .service('userService', userService);\r\n\r\n    userService.$inject = ['$http','variables','$location'];\r\n\r\n    function userService($http, variables, $location){\r\n        this.checkAvailability = checkAvailability;\r\n        this.create = create;\r\n        this.login = login;\r\n        this.authenticated = authenticated;\r\n\r\n        var fileApi = \"user.php\";\r\n        \r\n        ////////////////\r\n\r\n        function checkAvailability(username){\r\n            var data = {};\r\n            data.action = \"checkAvailability\";\r\n            data.username = username || \"\";\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        }\r\n        \r\n        function create(data) {\r\n            data.action = \"create\";\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        };\r\n        \r\n        function login(data){\r\n            data.action = \"login\";\r\n            return $http.post(variables.urlApi + fileApi, data);\r\n        }\r\n        \r\n        function authenticated(){\r\n            $location.path('/dashboard');\r\n        }\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('app.user')\r\n        .directive('username', username);\r\n\r\n    username.$inject = ['userService', '$timeout', '$q'];\r\n\r\n    function username(userService, $timeout, $q) {\r\n        var directive = {\r\n            require: 'ngModel',\r\n            link: link,\r\n            restrict: 'A',\r\n        };\r\n        return directive;\r\n\r\n        function link(scope, element, attrs, controller) {\r\n            controller.$asyncValidators.username = function (modelValue, viewValue) {\r\n                \r\n                var defer = $q.defer();\r\n                \r\n                userService.checkAvailability(modelValue).then(function (result) {\r\n                    if(result.data){\r\n                        defer.resolve();\r\n                    }else{\r\n                        defer.reject();\r\n                    }\r\n                })\r\n                \r\n                return defer.promise;\r\n            };\r\n        }\r\n    }\r\n})();\r\n"]}